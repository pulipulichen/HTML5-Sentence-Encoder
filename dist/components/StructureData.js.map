{"version":3,"sources":["webpack:///./src/components/StructureData/StructureData.yaml","webpack:///./src/components/StructureData/StructureData.less","webpack:///./src/components/StructureData/StructureData.html?62e8","webpack:///./src/components/StructureData/StructureData.less?752a","webpack:///./src/components/StructureData/StructureData.html","webpack:///./src/components/StructureData/StructureData.js","webpack:///./src/components/StructureData/StructureData.js?6a53","webpack:///./src/components/StructureData/StructureData.less?52a5","webpack:///./src/components/StructureData/StructureData.vue","webpack:///./src/components/StructureData/StructureData.yaml?195b"],"names":[],"mappings":"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","file":"components/StructureData.js","sourcesContent":["module.exports = function (Component) {\n  Component.options.__i18n = Component.options.__i18n || []\n  Component.options.__i18n.push('{\"en\":{\"TEST_MESSAGE\":\"Test Message\"},\"zh-TW\":{\"TEST_MESSAGE\":\"測試訊息\"}}')\n  delete Component.options._Ctor\n}\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(true);\n// Module\nexports.push([module.id, \".StructureData .sentence-embedding-textarea[data-v-13b0956a] {\\n  height: calc(100vh - 10.6rem) !important;\\n  max-height: calc(100vh - 10.6rem) !important;\\n  white-space: pre !important;\\n  overflow-wrap: normal !important;\\n  overflow-x: auto !important;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"E:/pudding/Code-Porjects/html/HTML5-Sentence-Encoder/src/components/StructureData/StructureData.less?vue&type=style&index=0&id=13b0956a&lang=less&scoped=true&\",\"StructureData.less\"],\"names\":[],\"mappings\":\"AAAA;EAEE,wCAAA;EACA,4CAAA;EAEA,2BAAA;EACA,gCAAA;EACA,2BAAA;ACDF\",\"file\":\"StructureData.less\",\"sourcesContent\":[\".StructureData .sentence-embedding-textarea {\\n  @height: calc(100vh - 10.6rem);\\n  height: @height !important;\\n  max-height: @height !important;\\n  \\n  white-space: pre !important;\\n  overflow-wrap: normal !important;\\n  overflow-x: auto !important;\\n}\",\".StructureData .sentence-embedding-textarea {\\n  height: calc(100vh - 10.6rem) !important;\\n  max-height: calc(100vh - 10.6rem) !important;\\n  white-space: pre !important;\\n  overflow-wrap: normal !important;\\n  overflow-x: auto !important;\\n}\\n\"]}]);\n// Exports\nmodule.exports = exports;\n","var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"StructureData\" }, [\n    _c(\"div\", { staticClass: \"field\" }, [\n      _c(\n        \"label\",\n        { attrs: { for: \"SentenceEmbedding\" } },\n        [\n          _vm._v(\"\\n      \" + _vm._s(_vm.$t(\"Stucture Data\")) + \"\\n      \"),\n          _vm.config.nlpMode === \"embedding\"\n            ? [\n                _vm._v(\n                  \"\\n        :\\n        \" +\n                    _vm._s(_vm.$t(\"Embedding\")) +\n                    \"\\n      \"\n                ),\n              ]\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.config.nlpMode === \"tokenization\"\n            ? [\n                _vm._v(\n                  \"\\n        :\\n        \" +\n                    _vm._s(_vm.$t(\"Word Vector\")) +\n                    \"\\n      \"\n                ),\n              ]\n            : _vm._e(),\n        ],\n        2\n      ),\n      _vm._v(\" \"),\n      _c(\"textarea\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model\",\n            value: _vm.config.StructureText,\n            expression: \"config.StructureText\",\n          },\n        ],\n        staticClass: \"sentence-embedding-textarea\",\n        attrs: { id: \"SentenceEmbedding\" },\n        domProps: { value: _vm.config.StructureText },\n        on: {\n          input: function ($event) {\n            if ($event.target.composing) {\n              return\n            }\n            _vm.$set(_vm.config, \"StructureText\", $event.target.value)\n          },\n        },\n      }),\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"three fields\" }, [\n      _c(\"div\", { staticClass: \"field\" }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"ui fluid button\",\n            class: { disabled: _vm.noData },\n            on: { click: _vm.copy },\n          },\n          [\n            _vm._v(\"\\n        \" + _vm._s(_vm.$t(\"COPY\")) + \"\\n        \"),\n            _c(\"i\", { staticClass: \"copy icon\" }),\n          ]\n        ),\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"field\" }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"ui fluid button\",\n            class: { disabled: _vm.noData },\n            on: { click: _vm.save },\n          },\n          [\n            _vm._v(\"\\n        \" + _vm._s(_vm.$t(\"SAVE\")) + \"\\n        \"),\n            _c(\"i\", { staticClass: \"save outline icon\" }),\n          ]\n        ),\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"field\" }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"ui fluid button\",\n            class: { disabled: _vm.noData },\n            on: { click: _vm.classify },\n          },\n          [\n            _vm._v(\"\\n        \" + _vm._s(_vm.$t(\"CLASSIFY\")) + \"\\n        \"),\n            _c(\"i\", { staticClass: \"sitemap icon\" }),\n          ]\n        ),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js?sourceMap!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/less-loader/dist/cjs.js??ref--1-2!./StructureData.less?vue&type=style&index=0&id=13b0956a&lang=less&scoped=true&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"20c69648\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js?sourceMap!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/less-loader/dist/cjs.js??ref--1-2!./StructureData.less?vue&type=style&index=0&id=13b0956a&lang=less&scoped=true&\", function() {\n     var newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js?sourceMap!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/less-loader/dist/cjs.js??ref--1-2!./StructureData.less?vue&type=style&index=0&id=13b0956a&lang=less&scoped=true&\");\n     if(newContent.__esModule) newContent = newContent.default;\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}","export * from \"-!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./StructureData.html?vue&type=template&id=13b0956a&scoped=true&\"","/* global use */\r\nconst Papa = require('papaparse')\r\n\r\nlet StructureData = {\r\n  props: ['config', 'localConfig', 'utils'],\r\n  data () {    \r\n    this.$i18n.locale = this.localConfig.locale\r\n    return {\r\n      model: null\r\n    }\r\n  },\r\n  watch: {\r\n    'localConfig.locale'() {\r\n      this.$i18n.locale = this.localConfig.locale;\r\n    },\r\n    'config.StructureText' (newText, oldText) {\r\n      if (oldText === '') {\r\n        return false\r\n      }\r\n      \r\n      this.config.StructureData = null\r\n      this.config.StructureHeaders = null\r\n    },\r\n    'config.StructureData' () {\r\n      if (this.config.StructureData === null) {\r\n        return false\r\n      }\r\n      //console.log(this.config.StructureData)\r\n      this.config.StructureText = Papa.unparse(this.config.StructureData)\r\n      this.config.StructureArray = this.config.StructureData.map(row => {\r\n        return Object.keys(row).map(key => row[key])\r\n      })\r\n      //console.log(this.config.StructureArray)\r\n      \r\n      this.config.StructureArray.unshift(Object.keys(this.config.StructureData[0]))\r\n      //console.log(this.config.StructureArray)\r\n      //console.log(this.config.PreprocessText)\r\n    }\r\n  },\r\n  computed: {\r\n    noData () {\r\n      return (!this.config.StructureText || this.config.StructureText === '')\r\n    }\r\n  },\r\n  mounted() {\r\n    \r\n  },\r\n  methods: {\r\n    getModel: async function () {\r\n      if (this.model) {\r\n        return this.model\r\n      }\r\n      \r\n      return new Promise((resolve) => {\r\n        use.load().then(model => {\r\n          this.model = model\r\n          resolve(model)\r\n        });\r\n      })\r\n    },\r\n    parseSentenceEmbedding: async function (sentences) {\r\n      let model = await this.getModel()\r\n      \r\n      return new Promise((resolve) => {\r\n        model.embed(sentences).then(async (embeddings) => {\r\n          // `embeddings` is a 2D tensor consisting of the 512-dimensional embeddings for each sentence.\r\n          // So in this example `embeddings` has the shape [2, 512].\r\n          //embeddings.print(true /* verbose */);\r\n          \r\n          let array = await embeddings.arraySync()\r\n          resolve(array)\r\n        });\r\n      })\r\n    },\r\n    buildStructureData: async function (data, headers) {\r\n      \r\n      let key = headers[0]\r\n      //console.log(headers)\r\n      let input = data.map(item => item[key])\r\n      //console.log(input)\r\n      let embeddingList = await this.parseSentenceEmbedding(input)\r\n      //console.log(embedding)\r\n      //window.E = embedding\r\n      //console.log('buildStructureData')\r\n      \r\n      this.config.StructureData = data.map((item, i) => {\r\n        let embeddingItem = {}\r\n        let embedding = embeddingList[i]\r\n        \r\n        embedding.forEach((e, j) => {\r\n          embeddingItem[key + j] = e\r\n        })\r\n        \r\n        embeddingItem[headers[1]] = item[headers[1]]\r\n        \r\n        return embeddingItem\r\n      })\r\n    },\r\n    copy () {\r\n      this.utils.ClipboardUtils.copyPlainString(Papa.unparse(this.config.StructureData, {\r\n        delimiter: '\\t'\r\n      }))\r\n    },\r\n    save () {\r\n      let filename = this.config.nlpMode \r\n        + '-' \r\n        + (new Date()).mmddhhmm()\r\n        + '.csv'\r\n      this.utils.FileUtils.download(filename, this.config.StructureText)\r\n    },\r\n    classify () {\r\n      console.log(this.config.StructureArray)\r\n      this.utils.ClassifyUtils.openClassifier(this.config.StructureArray, {\r\n        classifier: 'KNearestNeighbors'\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport default StructureData","import mod from \"-!./StructureData.js?vue&type=script&lang=js&\"; export default mod; export * from \"-!./StructureData.js?vue&type=script&lang=js&\"","export * from \"-!../../../node_modules/vue-style-loader/index.js!../../../node_modules/css-loader/dist/cjs.js?sourceMap!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/less-loader/dist/cjs.js??ref--1-2!./StructureData.less?vue&type=style&index=0&id=13b0956a&lang=less&scoped=true&\"","import { render, staticRenderFns } from \"./StructureData.html?vue&type=template&id=13b0956a&scoped=true&\"\nimport script from \"./StructureData.js?vue&type=script&lang=js&\"\nexport * from \"./StructureData.js?vue&type=script&lang=js&\"\nimport style0 from \"./StructureData.less?vue&type=style&index=0&id=13b0956a&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"13b0956a\",\n  null\n  \n)\n\n/* custom blocks */\nimport block0 from \"./StructureData.yaml?vue&type=custom&index=0&blockType=i18n&issuerPath=E%3A%5Cpudding%5CCode-Porjects%5Chtml%5CHTML5-Sentence-Encoder%5Csrc%5Ccomponents%5CStructureData%5CStructureData.vue&lang=yaml\"\nif (typeof block0 === 'function') block0(component)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\pudding\\\\Code-Porjects\\\\html\\\\HTML5-Sentence-Encoder\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('13b0956a')) {\n      api.createRecord('13b0956a', component.options)\n    } else {\n      api.reload('13b0956a', component.options)\n    }\n    module.hot.accept(\"./StructureData.html?vue&type=template&id=13b0956a&scoped=true&\", function () {\n      api.rerender('13b0956a', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/components/StructureData/StructureData.vue\"\nexport default component.exports","import mod from \"-!../../../node_modules/@kazupon/vue-i18n-loader/lib/index.js!./StructureData.yaml?vue&type=custom&index=0&blockType=i18n&issuerPath=E%3A%5Cpudding%5CCode-Porjects%5Chtml%5CHTML5-Sentence-Encoder%5Csrc%5Ccomponents%5CStructureData%5CStructureData.vue&lang=yaml\"; export default mod; export * from \"-!../../../node_modules/@kazupon/vue-i18n-loader/lib/index.js!./StructureData.yaml?vue&type=custom&index=0&blockType=i18n&issuerPath=E%3A%5Cpudding%5CCode-Porjects%5Chtml%5CHTML5-Sentence-Encoder%5Csrc%5Ccomponents%5CStructureData%5CStructureData.vue&lang=yaml\""],"sourceRoot":""}